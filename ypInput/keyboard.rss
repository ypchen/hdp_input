<?xml version='1.0' encoding="UTF-8" ?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">

<!-- 此 rss 檔是由 media translate 的 keyboard.rss password.rss 修改而來 -->
<!-- 注音表資料來自於 http://sourceforge.net/projects/cce2k/ -->
<!-- Unicode 正體轉簡體程式來自於 http://www.php5.idv.tw/sample/dbcconv.zip -->
<!-- 倉頡碼資料來自於 http://www.chinesecj.com/newsoftware/index2.php?Type=code -->

<onEnter>
	/* if this module is used for input passwords, set it to 1 */
	isPasswordMode = 0;

	/* Default: Local */
	defOnline = 0;
	defPrefix = "./etc/ypInput/";

	/* Probably no need to change the following three settings */
	defLocal  = "/usr/local/etc/dvdplayer/";
	defCache  = "_";
	defInfix  = "/";

	/* the FOUR default input methods */
	topOnline = null;
	topPrefix = null;
	imPrefix  = null;
	/* P1 Start */
	topOnline = pushBackStringArray(topOnline, defOnline);
	topPrefix = pushBackStringArray(topPrefix, defPrefix);
	imPrefix  = pushBackStringArray(imPrefix, "1-EnglishLower");
	/* P1 End */
	/* P2 Start */
	topOnline = pushBackStringArray(topOnline, defOnline);
	topPrefix = pushBackStringArray(topPrefix, defPrefix);
	imPrefix  = pushBackStringArray(imPrefix, "2-EnglishUpper");
	/* P2 End */
	/* P3 Start */
	topOnline = pushBackStringArray(topOnline, defOnline);
	topPrefix = pushBackStringArray(topPrefix, defPrefix);
	imPrefix  = pushBackStringArray(imPrefix, "3-PhoneticCHS");
	/* P3 End */
	/* P4 Start */
	/* P4 ypStart */
	topOnline = pushBackStringArray(topOnline, defOnline);
	topPrefix = pushBackStringArray(topPrefix, defPrefix);
	imPrefix  = pushBackStringArray(imPrefix, "4-PhoneticCHT");
	/* P4 ypEnd */
	/* P4 End */

	filenameKeys = "0-keys";
	filenameInfo = "1-info";
	filenameExt = ".txt";

	infoLine = 0;
	infoCode = 1;
	infoMode = 2;
	infoUseP0 = 3;
	infoMaxIn = 4;
	infoSwitchIM = 5;
	infoSendChar = 6;
	infoSCIStart = 7;

	specialMsg = "";
	fileSaveString = "/usr/local/etc/ypInput.saveString.";

	screenXp = 4;
	screenYp = 3;

	arrayIndex = 0;
	isOnline = Integer(getStringArrayAt(topOnline, arrayIndex));
	if (isOnline == 1) {
		allFileRemote = getStringArrayAt(topPrefix, arrayIndex);
		imInfixRemote = defInfix;
		allFilePrefix = defLocal;
		imInfix = defCache;
	}
	else {
		allFilePrefix = getStringArrayAt(topPrefix, arrayIndex);
		imInfix = defInfix;
	}
	filePage = allFilePrefix + getStringArrayAt(imPrefix, arrayIndex) + imInfix + filenameKeys + filenameExt;
	itemTitleArrayP1 = readStringFromFile(filePage);
	if ((itemTitleArrayP1 == null) &amp;&amp; (isOnline == 1)) {
		dldUrl2File(allFileRemote + getStringArrayAt(imPrefix, arrayIndex) + imInfixRemote + filenameKeys + filenameExt, filePage);
		itemTitleArrayP1 = readStringFromFile(filePage);
	}
	fileInfo = allFilePrefix + getStringArrayAt(imPrefix, arrayIndex) + imInfix + filenameInfo + filenameExt;
	infoP1 = readStringFromFile(fileInfo);
	if ((infoP1 == null) &amp;&amp; (isOnline == 1)) {
		dldUrl2File(allFileRemote + getStringArrayAt(imPrefix, arrayIndex) + imInfixRemote + filenameInfo + filenameExt, fileInfo);
		infoP1 = readStringFromFile(fileInfo);
	}

	arrayIndex = Add(arrayIndex, 1);
	isOnline = Integer(getStringArrayAt(topOnline, arrayIndex));
	if (isOnline == 1) {
		allFileRemote = getStringArrayAt(topPrefix, arrayIndex);
		imInfixRemote = defInfix;
		allFilePrefix = defLocal;
		imInfix = defCache;
	}
	else {
		allFilePrefix = getStringArrayAt(topPrefix, arrayIndex);
		imInfix = defInfix;
	}
	filePage = allFilePrefix + getStringArrayAt(imPrefix, arrayIndex) + imInfix + filenameKeys + filenameExt;
	itemTitleArrayP2 = readStringFromFile(filePage);
	if ((itemTitleArrayP2 == null) &amp;&amp; (isOnline == 1)) {
		dldUrl2File(allFileRemote + getStringArrayAt(imPrefix, arrayIndex) + imInfixRemote + filenameKeys + filenameExt, filePage);
		itemTitleArrayP2 = readStringFromFile(filePage);
	}
	fileInfo = allFilePrefix + getStringArrayAt(imPrefix, arrayIndex) + imInfix + filenameInfo + filenameExt;
	infoP2 = readStringFromFile(fileInfo);
	if ((infoP2 == null) &amp;&amp; (isOnline == 1)) {
		dldUrl2File(allFileRemote + getStringArrayAt(imPrefix, arrayIndex) + imInfixRemote + filenameInfo + filenameExt, fileInfo);
		infoP2 = readStringFromFile(fileInfo);
	}

	arrayIndex = Add(arrayIndex, 1);
	isOnline = Integer(getStringArrayAt(topOnline, arrayIndex));
	if (isOnline == 1) {
		allFileRemote = getStringArrayAt(topPrefix, arrayIndex);
		imInfixRemote = defInfix;
		allFilePrefix = defLocal;
		imInfix = defCache;
	}
	else {
		allFilePrefix = getStringArrayAt(topPrefix, arrayIndex);
		imInfix = defInfix;
	}
	filePage = allFilePrefix + getStringArrayAt(imPrefix, arrayIndex) + imInfix + filenameKeys + filenameExt;
	itemTitleArrayP3 = readStringFromFile(filePage);
	if ((itemTitleArrayP3 == null) &amp;&amp; (isOnline == 1)) {
		dldUrl2File(allFileRemote + getStringArrayAt(imPrefix, arrayIndex) + imInfixRemote + filenameKeys + filenameExt, filePage);
		itemTitleArrayP3 = readStringFromFile(filePage);
	}
	fileInfo = allFilePrefix + getStringArrayAt(imPrefix, arrayIndex) + imInfix + filenameInfo + filenameExt;
	infoP3 = readStringFromFile(fileInfo);
	if ((infoP3 == null) &amp;&amp; (isOnline == 1)) {
		dldUrl2File(allFileRemote + getStringArrayAt(imPrefix, arrayIndex) + imInfixRemote + filenameInfo + filenameExt, fileInfo);
		infoP3 = readStringFromFile(fileInfo);
	}

	arrayIndex = Add(arrayIndex, 1);
	isOnline = Integer(getStringArrayAt(topOnline, arrayIndex));
	if (isOnline == 1) {
		allFileRemote = getStringArrayAt(topPrefix, arrayIndex);
		imInfixRemote = defInfix;
		allFilePrefix = defLocal;
		imInfix = defCache;
	}
	else {
		allFilePrefix = getStringArrayAt(topPrefix, arrayIndex);
		imInfix = defInfix;
	}
	filePage = allFilePrefix + getStringArrayAt(imPrefix, arrayIndex) + imInfix + filenameKeys + filenameExt;
	itemTitleArrayP4 = readStringFromFile(filePage);
	if ((itemTitleArrayP4 == null) &amp;&amp; (isOnline == 1)) {
		dldUrl2File(allFileRemote + getStringArrayAt(imPrefix, arrayIndex) + imInfixRemote + filenameKeys + filenameExt, filePage);
		itemTitleArrayP4 = readStringFromFile(filePage);
	}
	fileInfo = allFilePrefix + getStringArrayAt(imPrefix, arrayIndex) + imInfix + filenameInfo + filenameExt;
	infoP4 = readStringFromFile(fileInfo);
	if ((infoP4 == null) &amp;&amp; (isOnline == 1)) {
		dldUrl2File(allFileRemote + getStringArrayAt(imPrefix, arrayIndex) + imInfixRemote + filenameInfo + filenameExt, fileInfo);
		infoP4 = readStringFromFile(fileInfo);
	}

	prevPage           = 0;
	prevItemTitleArray = null;
	prevInfo           = null;

	/* Fixed itemSize for all the static pages */
	itemSize           = 48;
	currentPage        = 1;
	itemTitleArray     = itemTitleArrayP1;
	info               = infoP1;
	line               = Integer(getStringArrayAt(info, infoLine));
	useP0              = Integer(getStringArrayAt(info, infoUseP0));
	maxIn              = Integer(getStringArrayAt(info, infoMaxIn));
	switchIM           = getStringArrayAt(info, infoSwitchIM);
	sendChar           = getStringArrayAt(info, infoSendChar);
	inputCodeStr       = getStringArrayAt(info, infoCode);
	inputModeStr       = getStringArrayAt(info, infoMode);
	inputMethod        = " [" + inputCodeStr + inputModeStr + "]";

	arrayIndex = Minus(currentPage, 1);
	isOnline = Integer(getStringArrayAt(topOnline, arrayIndex));
	if (isOnline == 1) {
		allFileRemote = getStringArrayAt(topPrefix, arrayIndex);
		imInfixRemote = defInfix;
		allFilePrefix = defLocal;
		imInfix = defCache;
	}
	else {
		allFilePrefix = getStringArrayAt(topPrefix, arrayIndex);
		imInfix = defInfix;
	}

	lastItemTitle = "";

	inputTextCount = 0;
	inputTextArray = null;
	inputText = "";

	PHinputTextCount = 0;
	PHinputTextArray = null;
	PHinputText = "";

	indexSaveStringMax = 9;
	indexSaveString = 0;

	saveString = null;
	if(isPasswordMode != 1){
		saveString = readStringFromFile(fileSaveString + indexSaveString + ".dat");
		if(saveString != null) {
			inputTextCount = getStringArrayAt(saveString, 0);
			counter = 0;
			while(1) {
				if(counter &gt;= inputTextCount)
					break;
				ch = getStringArrayAt(saveString, counter+1);
				inputText += ch;
				inputTextArray = pushBackStringArray(inputTextArray, ch);
				counter += 1;
			}
		}
	}

	firstUse = 0;
	if(inputText != "") firstUse = 1;

	setFocusItemIndex(0);
	redrawDisplay();
</onEnter>

<mediaDisplay name="photoView"
	rowCount="4"
	columnCount="12"
	drawItemText="yes"
	menuBorderColor="0:0:0"
	sideColorBottom="0:0:0"
	sideColorTop="0:0:0"
	fontSize="22"
	sideTopHeightPC="0"
	itemImageXPC="10"
	itemOffsetXPC="11"
	itemOffsetYPC="30"
	itemWidthPC="5.5"
	itemHeightPC="10"
	backgroundColor="0:0:0"
	sliding="no"
	showHeader="no"
	showDefaultInfo="no"
	rollItems="no"
	idleImageXPC="45"
	idleImageYPC="42"
	idleImageWidthPC="10"
	idleImageHeightPC="10"
	imageBorderPC="2"
>
	<idleImage>image/busy1.png</idleImage>
	<idleImage>image/busy2.png</idleImage>
	<idleImage>image/busy3.png</idleImage>
	<idleImage>image/busy4.png</idleImage>
	<idleImage>image/busy5.png</idleImage>
	<idleImage>image/busy6.png</idleImage>
	<idleImage>image/busy7.png</idleImage>
	<idleImage>image/busy8.png</idleImage>

	<text redraw="no" align="left"
		offsetXPC="5" offsetYPC="2"
		widthPC="90" heightPC="15"
		fontSize="26"
		backgroundColor="-1:-1:-1" foregroundColor="200:200:200">
		<script>
			getPageInfo("pageTitle") + inputMethod + specialMsg;
		</script>
	</text>

	<image
		offsetXPC="82" offsetYPC="3"
		widthPC="15" heightPC="10">
		<widthPC>
			<script>
				300 / 152 * 10 * screenYp / screenXp;
			</script>
		</widthPC>
		<offsetXPC>
			<script>
				95 - 300 / 152 * 10 * screenYp / screenXp;
			</script>
		</offsetXPC>
	</image>

	<text redraw="yes" align="left"
		offsetXPC="10" offsetYPC="18"
		widthPC="80" heightPC="8"
		fontSize="18"
		backgroundColor="28:35:51" foregroundColor="200:200:200">
		<script>
			if (isPasswordMode == 1) {
				if(inputTextCount &gt; 0) {
					inputPassword="";
					counter = 0;
					while(1) {
						if(counter &gt;= inputTextCount)
							break;
						inputPassword += "*";
						counter += 1;
					}
					if (PHinputTextCount &gt; 0)
						print(inputPassword + "_  {" + inputCodeStr + ": " + PHinputText + "_}");
					else
						print(inputPassword + "_");
				}
				else {
					print("_");
				}
			}
			else {
				if (PHinputTextCount &gt; 0)
					print(inputText + "_  {" + inputCodeStr + ": " + PHinputText + "_}");
				else
					print(inputText + "_");
			}
		</script>
		<foregroundColor>
			<script>
				if (firstUse == 1) "110:110:110";
				else "200:200:200";
			</script>
		</foregroundColor>
	</text>

	<text redraw="no" align="left"
		offsetXPC="10" offsetYPC="80"
		widthPC="80" heightPC="5"
		fontSize="16"
		backgroundColor="-1:-1:-1" foregroundColor="140:140:140">
		[數字鍵]輸入數字; [下頁]輸入空格; [上頁]刪除字元; [播放]完成全部輸入並送出
	</text>

	<text redraw="no" align="left"
		offsetXPC="10" offsetYPC="85"
		widthPC="80" heightPC="5"
		fontSize="16"
		backgroundColor="-1:-1:-1" foregroundColor="140:140:140">
		<script>
		"[快退/進]; [重覆]重覆上個字(母); [信息(" + sendChar + ")]完成一個字; [選時(" + switchIM + ")]切換輸入法";
		</script>
	</text>

	<text redraw="no" align="right"
		offsetXPC="0" offsetYPC="90"
		widthPC="90" heightPC="5"
		fontSize="16"
		backgroundColor="-1:-1:-1" foregroundColor="140:140:140">
		<script>
			if (currentPage == 0) {
				msg = "選字";
			}
			else {
				msg = getStringArrayAt(imPrefix, (currentPage-1));
			}
			if (isOnline == 1) {
				"※ 線上: " + msg + " ※";
			}
			else {
				"※ 本機: " + msg + " ※";
			}
		</script>
	</text>

	<itemDisplay>
		<text align="center"
			offsetXPC="0" offsetYPC="0"
			widthPC="100" heightPC="100"
			fontSize="22"
			backgroundColor="33:40:58" foregroundColor="200:200:200">
			<script>
				idx = getQueryItemIndex();
				getStringArrayAt(itemTitleArray, idx-(-1));
			</script>
		</text>
	</itemDisplay>

	<onUserInput>
		<script>
			specialMsg = "";

			ret = "false";
			inputNumber = null;
			userInput = currentUserInput();

			if (userInput == "one" || userInput == "1")
				inputNumber = "1";
			else if (userInput == "two" || userInput == "2")
				inputNumber = "2";
			else if (userInput == "three" || userInput == "3")
				inputNumber = "3";
			else if (userInput == "four" || userInput == "4")
				inputNumber = "4";
			else if (userInput == "five" || userInput == "5")
				inputNumber = "5";
			else if (userInput == "six" || userInput == "6")
				inputNumber = "6";
			else if (userInput == "seven" || userInput == "7")
				inputNumber = "7";
			else if (userInput == "eight" || userInput == "8")
				inputNumber = "8";
			else if (userInput == "nine" || userInput == "9")
				inputNumber = "9";
			else if (userInput == "zero" || userInput == "0")
				inputNumber = "0";
			else if (userInput == "pagedown")
				inputNumber = " ";
			else if (userInput == "video_repeat")
				inputNumber = lastItemTitle;
			else if ((userInput == "video_frwd") || (userInput == "video_ffwd")) {
				if(isPasswordMode != 1){
					if (userInput == "video_frwd") {
						indexSaveString = indexSaveString + 1;
						if (indexSaveString &gt; indexSaveStringMax)
							indexSaveString = 0;
					}
					else {
						indexSaveString = indexSaveString - 1;
						if (indexSaveString &lt; 0)
							indexSaveString = indexSaveStringMax;
					}
					saveString = null;
					saveString = readStringFromFile(fileSaveString + indexSaveString + ".dat");
					if(saveString != null) {

						inputTextCount = 0;
						inputTextArray = null;
						inputText = "";

						PHinputTextCount = 0;
						PHinputTextArray = null;
						PHinputText = "";

						inputTextCount = getStringArrayAt(saveString, 0);
						counter = 0;
						while(1) {
							if(counter &gt;= inputTextCount)
								break;
							ch = getStringArrayAt(saveString, counter+1);
							inputText += ch;
							inputTextArray = pushBackStringArray(inputTextArray, ch);
							counter += 1;
						}
					}
					redrawDisplay();
				}
			}
			else if (userInput == "pageup") {
				firstUse = 0;

				if (currentPage == 0) {
					/* Fixed itemSize for all the static pages */
					itemSize       = 48;
					currentPage    = prevPage;
					itemTitleArray = prevItemTitleArray;
					info           = prevInfo;
					line           = Integer(getStringArrayAt(info, infoLine));
					useP0          = Integer(getStringArrayAt(info, infoUseP0));
					maxIn          = Integer(getStringArrayAt(info, infoMaxIn));
					switchIM       = getStringArrayAt(info, infoSwitchIM);
					sendChar       = getStringArrayAt(info, infoSendChar);
					inputCodeStr   = getStringArrayAt(info, infoCode);
					inputModeStr   = getStringArrayAt(info, infoMode);
					inputMethod    = " [" + inputCodeStr + inputModeStr + "]";

					arrayIndex = Minus(currentPage, 1);
					isOnline = Integer(getStringArrayAt(topOnline, arrayIndex));
					if (isOnline == 1) {
						allFileRemote = getStringArrayAt(topPrefix, arrayIndex);
						imInfixRemote = defInfix;
						allFilePrefix = defLocal;
						imInfix = defCache;
					}
					else {
						allFilePrefix = getStringArrayAt(topPrefix, arrayIndex);
						imInfix = defInfix;
					}
				}

				if (PHinputTextCount &gt; 0) {
					PHinputTextCount -= 1;
					PHinputTextArray = deleteStringArrayAt(PHinputTextArray, PHinputTextCount);
					PHinputText = "";
					counter = 0;
					while(1) {
						if(counter &gt;= PHinputTextCount)
							break;
						PHinputText += getStringArrayAt(PHinputTextArray, counter);
						counter += 1;
					}
					redrawDisplay();
				}
				else if (inputTextCount &gt; 0) {
					inputTextCount -= 1;
					inputTextArray = deleteStringArrayAt(inputTextArray, inputTextCount);
					inputText = "";
					counter = 0;
					while(1) {
						if(counter &gt;= inputTextCount)
							break;
						inputText += getStringArrayAt(inputTextArray, counter);
						counter += 1;
					}
					redrawDisplay();
				}
				ret = "true";
			}
			else if(userInput == "video_play") {
				if (isPasswordMode != 1) {
					/* Move the input history */
					indexSS = indexSaveStringMax - 1;
					while (indexSS &gt;= 0) {
						fileCopyFrom = fileSaveString + indexSS + ".dat";
						copyBuffer = null;
						copyBuffer = readStringFromFile(fileCopyFrom);
						if (copyBuffer != null) {
							indexTo = (indexSS + 1);
							fileCopyTo = fileSaveString + indexTo + ".dat";
							writeStringToFile(fileCopyTo, copyBuffer);
						}
						indexSS = indexSS - 1;
					}
					/* Save the current input to 0 */
					saveString = null;
					saveString = pushBackStringArray(saveString, inputTextCount);
					saveString = pushBackStringArray(saveString, inputTextArray);
					writeStringToFile(fileSaveString + "0.dat", saveString);
				}
				setReturnString(inputText);
				postMessage("return");
				ret = "true";
			}
			else if (userInput == "video_search") {
				PHinputTextCount = 0;
				PHinputTextArray = null;
				PHinputText = "";

				if (currentPage == 1) {
					/* Fixed itemSize for all the static pages */
					itemSize       = 48;
					currentPage    = 2;
					itemTitleArray = itemTitleArrayP2;
                    info           = infoP2;
				}
				else if (currentPage == 2) {
					/* Fixed itemSize for all the static pages */
					itemSize       = 48;
					currentPage    = 3;
					itemTitleArray = itemTitleArrayP3;
                    info           = infoP3;
			}
				else if (currentPage == 3) {
					/* Fixed itemSize for all the static pages */
					itemSize       = 48;
					currentPage    = 4;
					itemTitleArray = itemTitleArrayP4;
                    info           = infoP4;
				}
				else if (currentPage == 4) {
					/* Fixed itemSize for all the static pages */
					itemSize       = 48;
					currentPage    = 1;
					itemTitleArray = itemTitleArrayP1;
                    info           = infoP1;
				}
				line           = Integer(getStringArrayAt(info, infoLine));
				useP0          = Integer(getStringArrayAt(info, infoUseP0));
				maxIn          = Integer(getStringArrayAt(info, infoMaxIn));
				switchIM       = getStringArrayAt(info, infoSwitchIM);
				sendChar       = getStringArrayAt(info, infoSendChar);
				inputCodeStr   = getStringArrayAt(info, infoCode);
				inputModeStr   = getStringArrayAt(info, infoMode);
				inputMethod    = " [" + inputCodeStr + inputModeStr + "]";

				arrayIndex = Minus(currentPage, 1);
				isOnline = Integer(getStringArrayAt(topOnline, arrayIndex));
				if (isOnline == 1) {
					allFileRemote = getStringArrayAt(topPrefix, arrayIndex);
					imInfixRemote = defInfix;
					allFilePrefix = defLocal;
					imInfix = defCache;
				}
				else {
					allFilePrefix = getStringArrayAt(topPrefix, arrayIndex);
					imInfix = defInfix;
				}

				redrawDisplay();
				ret = "true";
			}
			else if ((userInput == "display") &amp;&amp; (PHinputTextCount &gt; 0)) {

				prefixIndex = Minus(currentPage, 1);
				fileChar = allFilePrefix + getStringArrayAt(imPrefix, prefixIndex) + imInfix + "i=" + PHinputText + filenameExt;
				itemTitleArrayChar = readStringFromFile(fileChar);
				if (((itemTitleArrayChar == null) || (itemTitleArrayChar == "")) &amp;&amp; (isOnline == 1)) {
					dldUrl2File(allFileRemote + getStringArrayAt(imPrefix, prefixIndex) + imInfixRemote + "i=" + urlEncode(PHinputText) + filenameExt, fileChar);
					itemTitleArrayChar = readStringFromFile(fileChar);
				}

				if ((itemTitleArrayChar != null) &amp;&amp;
					(getStringArrayAt(itemTitleArrayChar, 0) != "")) {

					prevPage           = currentPage;
					prevItemTitleArray = itemTitleArray;
                    prevInfo           = info;

					currentPage        = 0;
					itemTitleArray     = itemTitleArrayChar;
					itemSize           = getStringArrayAt(itemTitleArray, 0);
				}
				else {
					specialMsg = " -- 無此字";
				}

				redrawDisplay();
				ret = "true";
			}

			if (inputNumber != null) {
				if(firstUse == 1) {
					if(inputNumber == " ")
						inputNumber = "";
					else {
						inputText = "";
						inputTextArray = null;
						inputTextCount = 0;
					}
					firstUse = 0;
					redrawDisplay();
				}
				if(inputNumber != "") {
					inputText += inputNumber;
					inputTextArray  = pushBackStringArray(inputTextArray, inputNumber);
					inputTextCount -= -1;
					redrawDisplay();
					ret = "true";
				}
			}
			ret;
		</script>
	</onUserInput>
</mediaDisplay>

<item_template>
	<onClick>
		idx = getFocusItemIndex();
		itemTitle = getStringArrayAt(itemTitleArray, idx-(-1));

		if ((currentPage != 0) &amp;&amp; (itemTitle == switchIM)) {
			PHinputTextCount = 0;
			PHinputTextArray = null;
			PHinputText = "";

			if (currentPage == 1) {
				/* Fixed itemSize for all the static pages */
				itemSize       = 48;
				currentPage    = 2;
				itemTitleArray = itemTitleArrayP2;
				info           = infoP2;
			}
			else if (currentPage == 2) {
				/* Fixed itemSize for all the static pages */
				itemSize       = 48;
				currentPage    = 3;
				itemTitleArray = itemTitleArrayP3;
				info           = infoP3;
			}
			else if (currentPage == 3) {
				/* Fixed itemSize for all the static pages */
				itemSize       = 48;
				currentPage    = 4;
				itemTitleArray = itemTitleArrayP4;
				info           = infoP4;
			}
			else if (currentPage == 4) {
				/* Fixed itemSize for all the static pages */
				itemSize       = 48;
				currentPage    = 1;
				itemTitleArray = itemTitleArrayP1;
				info           = infoP1;
			}
			line           = Integer(getStringArrayAt(info, infoLine));
			useP0          = Integer(getStringArrayAt(info, infoUseP0));
			maxIn          = Integer(getStringArrayAt(info, infoMaxIn));
			switchIM       = getStringArrayAt(info, infoSwitchIM);
			sendChar       = getStringArrayAt(info, infoSendChar);
			inputCodeStr   = getStringArrayAt(info, infoCode);
			inputModeStr   = getStringArrayAt(info, infoMode);
			inputMethod    = " [" + inputCodeStr + inputModeStr + "]";

			arrayIndex = Minus(currentPage, 1);
			isOnline = Integer(getStringArrayAt(topOnline, arrayIndex));
			if (isOnline == 1) {
				allFileRemote = getStringArrayAt(topPrefix, arrayIndex);
				imInfixRemote = defInfix;
				allFilePrefix = defLocal;
				imInfix = defCache;
			}
			else {
				allFilePrefix = getStringArrayAt(topPrefix, arrayIndex);
				imInfix = defInfix;
			}
		}
		else {
			if (firstUse == 1) {
				inputText = "";
				inputTextArray = null;
				inputTextCount = 0;
				firstUse = 0;
			}

			if ((currentPage == 0) || (useP0 == 0)) {
				inputText += itemTitle;
				inputTextArray  = pushBackStringArray(inputTextArray, itemTitle);
				inputTextCount -= -1;

				lastItemTitle = itemTitle;
			}
			else if ((itemTitle != "") &amp;&amp; (itemTitle != sendChar)) {
				PHinputText += itemTitle;
				PHinputTextArray  = pushBackStringArray(PHinputTextArray, itemTitle);
				PHinputTextCount -= -1;
			}
		}

		if (currentPage == 0) {
			/* Fixed itemSize for all the static pages */
			itemSize       = 48;
			currentPage    = prevPage;
			itemTitleArray = prevItemTitleArray;
			info           = prevInfo;
			line           = Integer(getStringArrayAt(info, infoLine));
			useP0          = Integer(getStringArrayAt(info, infoUseP0));
			maxIn          = Integer(getStringArrayAt(info, infoMaxIn));
			switchIM       = getStringArrayAt(info, infoSwitchIM);
			sendChar       = getStringArrayAt(info, infoSendChar);
			inputCodeStr   = getStringArrayAt(info, infoCode);
			inputModeStr   = getStringArrayAt(info, infoMode);
			inputMethod    = " [" + inputCodeStr + inputModeStr + "]";

			arrayIndex = Minus(currentPage, 1);
			isOnline = Integer(getStringArrayAt(topOnline, arrayIndex));
			if (isOnline == 1) {
				allFileRemote = getStringArrayAt(topPrefix, arrayIndex);
				imInfixRemote = defInfix;
				allFilePrefix = defLocal;
				imInfix = defCache;
			}
			else {
				allFilePrefix = getStringArrayAt(topPrefix, arrayIndex);
				imInfix = defInfix;
			}

			PHinputTextCount = 0;
			PHinputTextArray = null;
			PHinputText = "";
		}
		else if (PHinputTextCount &gt; 0) {
			processFlag = 0;

			if (itemTitle == sendChar) {
				processFlag = 1;
			}
			else if ((maxIn &gt; 0) &amp;&amp; (PHinputTextCount == maxIn)) {
				processFlag = 1;
			}
			else {
				index = infoSCIStart;
				while ((index &lt;= line) &amp;&amp; (processFlag == 0)) {
					if (itemTitle == getStringArrayAt(info, index)) {
						processFlag = 1;
					}
					index = Add(index, 1);
				}
			}

			if (processFlag == 1) {
				prefixIndex = Minus(currentPage, 1);
				fileChar = allFilePrefix + getStringArrayAt(imPrefix, prefixIndex) + imInfix + "i=" + PHinputText + filenameExt;
				itemTitleArrayChar = readStringFromFile(fileChar);
				if (((itemTitleArrayChar == null) || (itemTitleArrayChar == "")) &amp;&amp; (isOnline == 1)) {
					dldUrl2File(allFileRemote + getStringArrayAt(imPrefix, prefixIndex) + imInfixRemote + "i=" + urlEncode(PHinputText) + filenameExt, fileChar);
					itemTitleArrayChar = readStringFromFile(fileChar);
				}

				if ((itemTitleArrayChar != null) &amp;&amp;
					(getStringArrayAt(itemTitleArrayChar, 0) != "")) {

					prevPage           = currentPage;
					prevItemTitleArray = itemTitleArray;
					prevInfo           = info;

					currentPage        = 0;
					itemTitleArray     = itemTitleArrayChar;
					itemSize           = getStringArrayAt(itemTitleArray, 0);
				}
				else {
					specialMsg = " -- 無此字";
				}
			}
		}

		redrawDisplay();
		null;
	</onClick>
</item_template>

<channel>

	<title>
		<script>
			if (isPasswordMode == 1)
				"密碼輸入";
			else
				"字串輸入";
		</script>
	</title>

	<itemSize>
		<script>
			itemSize;
		</script>
	</itemSize>
</channel>

</rss>
